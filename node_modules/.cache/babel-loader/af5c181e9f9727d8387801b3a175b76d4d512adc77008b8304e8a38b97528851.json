{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://react-http-94187-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"GET\"\n      });\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-94187-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          cart\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n    await sendRequest();\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","method","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","body","JSON","stringify"],"sources":["C:/Users/ACER/Downloads/01-starting-project (17)/01-starting-project/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\nexport const fetchCartData=()=>{\r\n    return async(dispatch)=>{\r\n        const fetchData=async()=>{\r\n            const response=await fetch(\"https://react-http-94187-default-rtdb.firebaseio.com/cart.json\", {\r\n                method: \"GET\",\r\n              }); \r\n              if(!response.ok){\r\n                throw new Error('Could not fetch cart data!');\r\n              }\r\n              const data = await response.json();\r\n              return data;\r\n        };\r\n        try{\r\n           const cartData=await fetchData();\r\n           dispatch(cartActions.replaceCart(cartData));\r\n        }catch(error){\r\n            dispatch(uiActions.showNotification({\r\n                status:'error',\r\n                title:'Error!',\r\n                message:'Fetching cart data failed!',\r\n              }))\r\n        }\r\n    }\r\n}\r\nexport const sendCartData=(cart)=>{\r\n  return async (dispatch)=>{\r\n    \r\n      dispatch(uiActions.showNotification({\r\n            status:'pending',\r\n            title:'Sending...',\r\n            message:'Sending cart data!',\r\n          }))\r\n          const sendRequest=async ()=>{\r\n            const response=await fetch(\"https://react-http-94187-default-rtdb.firebaseio.com/cart.json\", {\r\n              method: \"PUT\",\r\n              body: JSON.stringify({cart}),\r\n            }); \r\n            if(!response.ok){\r\n              throw new Error('Sending cart data failed.');\r\n            }\r\n          };\r\n          try{\r\n            await sendRequest();\r\n             \r\n          dispatch(uiActions.showNotification({\r\n            status:'success',\r\n            title:'Success!',\r\n            message:'Sent cart data successfully!',\r\n          })\r\n        )\r\n\r\n          }catch(error){\r\n            dispatch(uiActions.showNotification({\r\n              status:'error',\r\n              title:'Error!',\r\n              message:'Sending cart data failed!',\r\n            }))\r\n          }\r\n          await sendRequest();\r\n\r\n        \r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAC1C,OAAO,MAAMC,aAAa,GAACA,CAAA,KAAI;EAC3B,OAAO,MAAMC,QAAQ,IAAG;IACpB,MAAMC,SAAS,GAAC,MAAAA,CAAA,KAAS;MACrB,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,gEAAgE,EAAE;QACzFC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAG,CAACF,QAAQ,CAACG,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACjB,CAAC;IACD,IAAG;MACA,MAAME,QAAQ,GAAC,MAAMR,SAAS,CAAC,CAAC;MAChCD,QAAQ,CAACF,WAAW,CAACY,WAAW,CAACD,QAAQ,CAAC,CAAC;IAC9C,CAAC,QAAME,KAAK,EAAC;MACTX,QAAQ,CAACH,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAC,QAAQ;QACdC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IACT;EACJ,CAAC;AACL,CAAC;AACD,OAAO,MAAMC,YAAY,GAAEC,IAAI,IAAG;EAChC,OAAO,MAAOjB,QAAQ,IAAG;IAErBA,QAAQ,CAACH,SAAS,CAACe,gBAAgB,CAAC;MAC9BC,MAAM,EAAC,SAAS;MAChBC,KAAK,EAAC,YAAY;MAClBC,OAAO,EAAC;IACV,CAAC,CAAC,CAAC;IACH,MAAMG,WAAW,GAAC,MAAAA,CAAA,KAAU;MAC1B,MAAMhB,QAAQ,GAAC,MAAMC,KAAK,CAAC,gEAAgE,EAAE;QAC3FC,MAAM,EAAE,KAAK;QACbe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACJ;QAAI,CAAC;MAC7B,CAAC,CAAC;MACF,IAAG,CAACf,QAAQ,CAACG,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IACD,IAAG;MACD,MAAMY,WAAW,CAAC,CAAC;MAErBlB,QAAQ,CAACH,SAAS,CAACe,gBAAgB,CAAC;QAClCC,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAC,UAAU;QAChBC,OAAO,EAAC;MACV,CAAC,CACH,CAAC;IAEC,CAAC,QAAMJ,KAAK,EAAC;MACXX,QAAQ,CAACH,SAAS,CAACe,gBAAgB,CAAC;QAClCC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAC,QAAQ;QACdC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IACL;IACA,MAAMG,WAAW,CAAC,CAAC;EAG3B,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}